basePath: /api
definitions:
  api.CreateReportRequest:
    properties:
      address:
        type: string
      lat:
        type: number
      level:
        type: string
      lng:
        type: number
      title:
        type: string
      type:
        type: string
    required:
    - address
    - lat
    - level
    - lng
    - title
    - type
    type: object
  api.CreateReportResponse:
    properties:
      message:
        type: string
      report:
        $ref: '#/definitions/db.Reports'
    type: object
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.GetReportResponse:
    properties:
      message:
        type: string
      report:
        items:
          $ref: '#/definitions/db.Reports'
        type: array
    type: object
  api.UserResponse:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      passwordChangedAt:
        type: string
      provider:
        type: string
      updatedAt:
        type: string
    type: object
  api.googleRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  api.googleResponse:
    properties:
      accessToken:
        type: string
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      accessToken:
        type: string
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.registerUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  api.registerUserResponse:
    properties:
      accessToken:
        type: string
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  db.Reports:
    properties:
      address:
        type: string
      createdAt:
        type: string
      id:
        type: string
      lat:
        type: number
      level:
        type: string
      lng:
        type: number
      title:
        type: string
      type:
        type: string
      uid:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a documentation for Segment3d App API
  title: Segment3d App API Documentation
  version: "1.0"
paths:
  /auth/google:
    post:
      consumes:
      - application/json
      description: Authenticate user with Google OAuth token
      parameters:
      - description: Google OAuth token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.googleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User info from Google
          schema:
            $ref: '#/definitions/api.googleResponse'
        "400":
          description: 'Bad Request: Invalid token format or validation failed'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: 'Internal Server Error: Error during the Google auth process,
            user creation, or update'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "502":
          description: 'Bad Gateway: Please login using associated provider if user
            already exists'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Google Auth
      tags:
      - auth
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Login user with the provided credentials
      parameters:
      - description: User login details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User login successful
          schema:
            $ref: '#/definitions/api.loginUserResponse'
        "400":
          description: 'Bad Request: Wrong password format or validation failed'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: 'Not Found: User with email not found'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: 'Internal Server Error: Unexpected error during the login process'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "502":
          description: 'Bad Gateway: Please login using associated provider'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.registerUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registration successful
          schema:
            $ref: '#/definitions/api.registerUserResponse'
        "400":
          description: 'Bad Request: Invalid request format or validation failed'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "403":
          description: 'Forbidden: Email is already registered'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: 'Internal Server Error: Failed to create user or token generation
            failed'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /report:
    get:
      consumes:
      - application/json
      description: Get reports based on latitude and longitude within a certain range
      parameters:
      - description: Latitude
        in: query
        name: lat
        required: true
        type: number
      - description: Longitude
        in: query
        name: lng
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: successfully fetched reports
          schema:
            $ref: '#/definitions/api.GetReportResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get reports
      tags:
      - reports
    post:
      consumes:
      - application/json
      description: Create a new report with the provided details
      parameters:
      - description: Report creation details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: report creation successful
          schema:
            $ref: '#/definitions/api.CreateReportResponse'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a report
      tags:
      - reports
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
